{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add/add.component.ts","./src/app/add/add.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/banner/banner.component.ts","./src/app/banner/banner.component.html","./src/app/get-status/get-status.component.ts","./src/app/get-status/get-status.component.html","./src/app/google-sheet.service.ts","./src/app/phoneNumber-validator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n  customerFormGroup: FormGroup;\n  shopFormGroup: FormGroup;\n  item: FormGroup;\n  addedItems: FormArray = new FormArray([]);\n  productFormGroup: FormGroup;\n  itemControl = new FormControl();\n  shops: string[] = ['Veloor', 'Velappaya', 'MgKavu'];\n  filteredOptions: Observable<string[]>;\n\n\n  constructor(private _formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.customerFormGroup = this._formBuilder.group({\n      name: [''],\n      phoneNumber: ['']\n    });\n    this.productFormGroup = this._formBuilder.group({\n      addedItems: new FormArray([\n      ])\n    });\n    this.item = this._formBuilder.group({\n      item: [''],\n      quantity: [1],\n      rate: [50],\n      remark: ['']\n    });\n    this.shopFormGroup = this._formBuilder.group({\n      invoice: [new Date().getTime()],\n      shopName: [this.shops[0]],\n      date: [Date.now()]\n    })\n  }\n\n\n  addProducts() {\n    const items = <FormArray>this.productFormGroup.get('addedItems');\n    items.push(this.item)\n    this.item = this._formBuilder.group({\n      item: [''],\n      quantity: [1],\n      rate: [50],\n      remark: ['']\n    })\n  }\n\n  onIncrement(index): void {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.quantity) + 1;\n    this.item.patchValue({\n      quantity: [value]\n    })\n\n  }\n\n  onDecrement(index): void {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.quantity) - 1;\n    this.item.patchValue({\n      quantity: [value]\n    })\n  }\n  onDecrementMinusFive(index) {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.rate) - 5;\n    this.item.patchValue({\n      rate: [value]\n    })\n  }\n  onDecrementMinusTen(index) {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.rate) - 10;\n    this.item.patchValue({\n      rate: [value]\n    })\n  }\n  onInclementPlusFive(index) {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.rate) + 5;\n    this.item.patchValue({\n      rate: [value]\n    })\n  }\n  onInclementPlusTen(index) {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.rate) + 10;\n    this.item.patchValue({\n      rate: [value]\n    })\n  }\n  shouldDisableDecrement(index): boolean {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    if (Number(this.item.value.quantity) <= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n} \n","<mat-vertical-stepper linear=false #stepper>\n    <mat-step [stepControl]=\"shopFormGroup\">\n        <ng-template matStepLabel>Fill out Shop Details</ng-template>\n\n        <form [formGroup]=\"shopFormGroup\">\n            <div class=\"mat-h3\">\n                <span>{{shopFormGroup.value.date | date:'mediumDate'}}</span>\n            </div>\n            <div class=\"mat-h3\">\n                Invoice: <span>{{shopFormGroup.value.invoice}}</span>\n            </div>\n            <div class=\"shop\">\n                <mat-form-field>\n                    <mat-label>Shop</mat-label>\n                    <mat-select formControlName=\"shopName\">\n                        <mat-option *ngFor=\"let shop of shops\" [value]=\"shop\">\n                            {{shop}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n        </form>\n        <div class=\"next\"><button mat-button matStepperNext color=\"primary\">Next</button></div>\n\n        <div class=\"back\">\n            <button mat-button matStepperPrevious color=\"warn\">Back</button>\n        </div>\n    </mat-step>\n    <mat-step [stepControl]=\"customerFormGroup\">\n        <form [formGroup]=\"customerFormGroup\">\n            <ng-template matStepLabel>Fill out Customer Details</ng-template>\n            <div class=\"customer-data\">\n                <mat-form-field>\n                    <mat-label>Name</mat-label>\n                    <input matInput placeholder=\"John Snow\" formControlName=\"name\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>Phone</mat-label>\n                    <input matInput placeholder=\"919495345789\" formControlName=\"phoneNumber\">\n                </mat-form-field>\n            </div>\n            <div class=\"next\"><button mat-button matStepperNext color=\"primary\">Next</button></div>\n            <div class=\"back\">\n                <button mat-button matStepperPrevious color=\"warn\">Back</button>\n            </div>\n        </form>\n    </mat-step>\n\n    <mat-step [stepControl]=\"productFormGroup\">\n        <form [formGroup]=\"productFormGroup\" class=\"content-product\">\n            <ng-template matStepLabel>Fill out Item Details</ng-template>\n            <div class=\"item-preview\">\n                <mat-accordion>\n                    <mat-expansion-panel\n                        *ngFor=\"let product of productFormGroup.get('addedItems')['controls']; let i = index;\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                {{product.value.item}}\n                            </mat-panel-title>\n                            <mat-panel-description>\n                                Remark: {{product.value.remark}}\n                            </mat-panel-description>\n                        </mat-expansion-panel-header>\n                        <ng-template matExpansionPanelContent>\n                            <div class=\"items-details\">\n                                <mat-form-field>\n                                    <mat-label>Quantity</mat-label>\n                                    <input matInput readonly value=\"{{product.value.quantity}}\">\n                                </mat-form-field>\n                                <mat-form-field>\n                                    <mat-label>Rate</mat-label>\n                                    <input matInput readonly value=\"{{product.value.rate}}\">\n                                </mat-form-field>\n                            </div>\n                        </ng-template>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n        </form>\n        <form [formGroup]=\"item\" class=\"content-product\">\n            <div class=\"product-container\">\n                <div class=\"field-group\">\n                    <span class=\"item\">\n                        <mat-form-field ngClass=\"item\">\n                            <mat-label>Item</mat-label>\n                            <input matInput type=\"text\" placeholder=\"Shirt\" formControlName=\"item\">\n                        </mat-form-field>\n                    </span>\n                    <mat-form-field>\n                        <button mat-button mat-icon-button matPrefix aria-label=\"Remove\" color=\"red\"\n                            (click)=\"onDecrement(0)\" [disabled]=\"shouldDisableDecrement(0)\">\n                            <mat-icon>remove</mat-icon>\n                        </button>\n                        <mat-label>Quantity</mat-label>\n                        <input matInput type=\"number\" formControlName=\"quantity\">\n                        <button mat-button mat-icon-button matSuffix aria-label=\"Add\" color=\"green\"\n                            (click)=\"onIncrement(0)\">\n                            <mat-icon>add</mat-icon>\n                        </button>\n                    </mat-form-field>\n                    <mat-form-field class=\"rate\">\n                        <button mat-button mat-icon-button matPrefix aria-label=\"Remove\" color=\"red\"\n                            (click)=\"onDecrementMinusTen(0)\" [disabled]=\"shouldDisableDecrement(0)\">\n                            <mat-icon>remove</mat-icon><span class=\"incr\">10</span>\n                        </button>\n                        <mat-label>Rate</mat-label>\n                        <input matInput type=\"number\" formControlName=\"rate\">\n                        <button mat-button mat-icon-button matSuffix aria-label=\"Add\" color=\"green\"\n                            (click)=\"onInclementPlusTen(0)\">\n                            <mat-icon>add</mat-icon><span class=\"incr\">10</span>\n                        </button>\n                    </mat-form-field>\n                </div>\n                <div class=\"field-group-remark\">\n                    <mat-form-field class=\"remark\">\n                        <mat-label>Remark</mat-label>\n                        <textarea matInput type=\"text\" formControlName=\"remark\"></textarea>\n                    </mat-form-field>\n                </div>\n\n            </div>\n        </form>\n        <div class=\"addProduct\">\n            <button mat-button (click)=\"addProducts()\">\n                <mat-icon class=\"add-icon\">add_circle</mat-icon>\n            </button><br>\n        </div>\n        <div class=\"next\"><button mat-button matStepperNext color=\"primary\">Next</button></div>\n        <div class=\"back\">\n            <button mat-button matStepperPrevious color=\"warn\">Back</button>\n        </div>\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Done</ng-template>\n        <p>Click submit to save.</p>\n        <div class=\"next\">\n            <button mat-raised-button matStepperPrevious color=\"primary\">Submit</button>\n        </div>\n    </mat-step>\n</mat-vertical-stepper>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GetStatusComponent } from './get-status/get-status.component';\nimport {AddComponent} from './add/add.component'\nconst routes: Routes = [\n  { path: 'search', component: GetStatusComponent },\n  { path: 'add', component: AddComponent },\n  { path: '', redirectTo: '/search', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'shipment-status';\n}\n","<app-banner></app-banner>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GetStatusComponent } from './get-status/get-status.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BannerComponent } from './banner/banner.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { AddComponent } from './add/add.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GetStatusComponent,\n    BannerComponent,\n    AddComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatTableModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatListModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatButtonToggleModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    LayoutModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatStepperModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n  links = [{'label': 'Search', 'path':'./search'}, {'label': 'Add', 'path':'./add'}];\n  activeLink = this.links[0];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Toolbar -->\n<!-- <div class=\"toolbar\" role=\"banner\">\n  <img width=\"40\" alt=\"Angular Logo\" src=\"../../assets/laundryIcon.jpg\" />\n  <h1>The Laundry Expert</h1> -->\n  <mat-toolbar color=\"primary\">\n    <img width=\"40\" alt=\"Logo\" src=\"../../assets/laundryIcon.jpg\" />\n    <span>The Laundry Expert</span>\n  </mat-toolbar>\n    <!-- <mat-tab label=\"Search\"> <a routerLink=\"/search\" routerLinkActive=\"active\">Search</a> </mat-tab>\n    <mat-tab label=\"Add\"> <a routerLink=\"/add\" routerLinkActive=\"active\">Add</a> </mat-tab> -->\n    <!-- <nav mat-tab-nav-bar>\n      <a mat-tab-link\n         routerLink=\"./search\"\n         routerLinkActive #rla=\"routerLinkActive\"\n         active=\"true\">\n        Search\n      </a>\n      <a mat-tab-link\n         routerLink=\"./add\"\n         routerLinkActive #rla=\"routerLinkActive\"\n         active=\"true\">\n        Add\n      </a>\n    </nav> -->\n    <nav mat-tab-nav-bar>\n      <a *ngFor=\"let link of links\" mat-tab-link\n      (click)=\"activeLink = link\"\n      [active]=\"activeLink == link\"\n      [routerLink]=\"link.path\"\n      > {{ link.label }} \n      \n    </a>\n<!-- \n      [active]=\"isViewInitialized && isLinkActive(rla)\"\n        [routerLink]=\"link.path\"\n        routerLinkActive>\n        {{link.label}}\n      </a> -->\n    </nav>\n  <router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GoogleSheetService } from '../google-sheet.service';\nimport { Item, PeriodicElement } from './model';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-get-status',\n  templateUrl: './get-status.component.html',\n  providers: [GoogleSheetService],\n  styleUrls: ['./get-status.component.scss']\n})\n\n\nexport class GetStatusComponent implements OnInit {\n  customerData: FormGroup;\n  submitted = false;\n  panelOpenState = false;\n  contentClass = 'web-status-margin';\n  constructor(private googleSheetService: GoogleSheetService, breakpointObserver: BreakpointObserver) {\n    this.customerData = this.createFormGroup();\n    breakpointObserver.observe([\n      Breakpoints.HandsetPortrait\n    ]).subscribe(result => {\n      console.log(\"matched: \" + result.matches)\n      if (result.matches) {\n        this.contentClass = 'mobile-status-margin';\n      }\n    });\n  }\n  createFormGroup() {\n    return new FormGroup({\n      id: new FormControl('', [Validators.required]),\n      selectedStore: new FormControl('Veloor')\n    });\n  }\n  clickMessage = '';\n  dataSource;\n  showResult = false;\n  showSpinner = false;\n  isResultNotFound = false;\n\n  ngOnInit(): void {\n    this.dataSource = [];\n  }\n\n  onSubmit() {\n    this.dataSource = [];\n    if (this.customerData.invalid) {\n      return;\n    } else {\n      this.showSpinner = true;\n      this.isResultNotFound = false;\n      this.showResult = false;\n      this.getSheets(this.customerData.value.id, this.customerData.value.selectedStore);\n      this.submitted = true;\n    }\n  }\n\n  getSheets(phoneNumber, selectedStore): void {\n    console.log(selectedStore)\n    const elements: PeriodicElement[] = [];\n    this.googleSheetService.getSheet(phoneNumber, selectedStore)\n      .subscribe((data: any[]) => {\n        data.forEach(it => {\n          let iconName = '';\n          let iconClass = '';\n          let items = [];\n          let ready = false;\n          let pending = false;\n          let error = false;\n          let state: string;\n          for (let itemRes of it.items) {\n            let item: Item = {\n              name: itemRes.name,\n              totalPieces: itemRes.totalPieces,\n              finishedPieces: itemRes.finishedPieces,\n              damagedPieces: itemRes.damagedPieces\n            }\n            if (itemRes.status == 'Ready' || itemRes.status == 'Ready ') {\n              item.iconName = 'check_circle';\n              item.iconClass = 'done-icon';\n              state = 'ready for delivery';\n              ready = true;\n            } else if (itemRes.status == 'Pending ') {\n              item.iconName = 'warning';\n              item.iconClass = 'inprogress-icon';\n              state = 'in process';\n              pending = true\n            } else if (itemRes.status == 'Ready+return') {\n              item.iconName = 'check_circle';\n              item.iconClass = 'delivered-icon';\n              pending = true;\n              state = 'ready for delivery';\n            } else {\n              item.iconName = 'error';\n              item.iconClass = 'error-icon';\n              error = true;\n              state = 'in process';\n            }\n            items.push(item);\n          }\n\n          if (ready == true && pending !== true && error !== true) {\n            iconName = 'check_circle';\n            iconClass = 'done-icon';\n          } else if (pending == true && error !== true) {\n            iconName = 'warning';\n            iconClass = 'inprogress-icon';\n          } else {\n            iconName = 'error';\n            iconClass = 'error-icon';\n            state = 'in process';\n          }\n          const link = `https://wa.me/${it.phoneNumber}?text=*THE LAUNDRY EXPERT*\n          %0AHi ${it.name}, \n          %0AYour material is _${state}_.\n          %0A_Looking forward to working with you again soon._ Thank you for choosing us.\n          %0AThe Laundry Expert 😀`\n          let element = {\n            name: it.name, billNumber: it.billNumber, date: it.date, dueDate: it.dueDate,\n            phoneNumber: it.phoneNumber, total: it.total, link: link, iconName: iconName,\n            iconClass: iconClass, items: items\n          }\n          elements.push(element)\n        })\n        if (elements.length > 0) {\n          this.showResult = true;\n          this.submitted = false;\n        } else {\n          this.isResultNotFound = true;\n          this.submitted = false;\n        }\n        this.showSpinner = false;\n        this.dataSource = elements;\n      });\n  }\n\n  get f() { return this.customerData.controls; }\n\n  displayedColumns: string[] = ['phoneNumber', 'name', 'billNumber', 'status', 'remark'];\n}\n","<div [ngClass]=\"contentClass\">\n    <h2>Find Status </h2>\n    <form [formGroup]=\"customerData\" (ngSubmit)=\"onSubmit()\" ngClass=\"form-field-custom\">\n        <mat-button-toggle-group aria-label=\"Select a store\" formControlName=\"selectedStore\">\n            <mat-button-toggle value=\"Veloor\" [checked]=true>Veloor</mat-button-toggle>\n            <mat-button-toggle value=\"Velappaya\">Velappaya</mat-button-toggle>\n            <mat-button-toggle value=\"Mulamkunnathkavu\">MgKavu</mat-button-toggle>\n        </mat-button-toggle-group>\n        <br>\n        <mat-form-field [ngClass]=\"{ 'has-error': submitted && f.id.errors }\">\n            <mat-label>Phone number/ Bill Number</mat-label>\n            <input matInput placeholder=\"9789821252\" formControlName=\"id\" value=\"919789821252/VA1000\">\n            <div *ngIf=\"submitted && f.id.errors\" class=\"help-block\">\n                <div *ngIf=\"f.id.errors.required\">Phone no/ Bill number is required</div>\n            </div>\n\n        </mat-form-field>\n        <button mat-icon-button color=\"primary\" type=\"submit\" [disabled]=\"!customerData.valid\">\n            <mat-icon>send</mat-icon>\n        </button>\n\n\n    </form>\n    <div *ngIf=\"showSpinner; then show\"> </div>\n    <ng-template #show>\n        <div class=\"spinner-wrapper\">\n            <mat-progress-spinner mode=\"indeterminate\" diameter=30></mat-progress-spinner>\n        </div>\n\n    </ng-template>\n    <div *ngIf=\"showResult; then thenBlock else elseBlock\"> </div>\n    <ng-template #thenBlock>\n        <mat-accordion class=\"accordion-extend\">\n            <mat-expansion-panel *ngFor=\"let data of dataSource\" (opened)=\"panelOpenState = true\"\n                (closed)=\"panelOpenState = false\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <mat-icon [ngClass]=\"data.iconClass\">{{data.iconName}}</mat-icon><span\n                            ngClass=\"card-header\">{{data.billNumber}}</span>\n                    </mat-panel-title>\n                    <mat-panel-description ngClass=\"card-header-date\">\n                        {{ data.date | date:'mediumDate' }}\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                <div>Name : {{data.name}}</div>\n                <div>Phone number : {{data.phoneNumber}}</div>\n                <div>Due Date: {{data.dueDate | date:'mediumDate'}}</div>\n                <div>Total: {{data.total}} Rupees</div>\n                <div>Items :\n                    <mat-list *ngFor=\"let item of data.items\">\n                        <mat-list-item>\n                            <mat-icon [ngClass]=\"item.iconClass\">{{item.iconName}}</mat-icon>\n                            <span ngClass=\"item-details\">{{item.name}}</span>\n                            <span ngClass=\"circle-total\">{{item.totalPieces}}</span>\n                            <span ngClass=\"circle-done\">{{item.finishedPieces}}</span>\n                            <div *ngIf=\"item.damagedPieces; then thenBlock\"> </div>\n                            <ng-template #thenBlock>\n                                <span ngClass=\"circle-damaged\">{{item.damagedPieces}}</span>\n                            </ng-template>\n                        </mat-list-item>\n                        <!-- <mat-grid-list cols=\"2\" rowHeight=\"2:1\">                \n                        \n                            <mat-grid-tile ngClass=\"tile-spec\">\n                                <span matBadge=\"{{item.finishedPieces}}\" matBadgeOverlap=\"false\">Fished</span>\n                            </mat-grid-tile>\n                            <mat-grid-tile ngClass=\"tile-spec\">\n                                <span matBadge=\"{{item.damagedPieces}}\" matBadgeOverlap=\"false\">Damaged</span>\n                            </mat-grid-tile>\n                        </mat-grid-list> -->\n                        <mat-divider></mat-divider>\n                    </mat-list>\n\n                </div>\n                <mat-action-row>\n                    <a mat-raised-button [href]=\"data.link\" target=\"_blank\" color=\"primary\">Send to WhatsApp</a>\n                </mat-action-row>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </ng-template>\n    <ng-template #elseBlock>\n        <div *ngIf=\"isResultNotFound; then thenBlock\"></div>\n        <ng-template #thenBlock>No Results found</ng-template>\n    </ng-template>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './../environments/environment';\nimport { phoneNumberValidator } from './phoneNumber-validator'\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleSheetService {\n\n  constructor(private http: HttpClient) { }\n  getSheet(id, selectedStore) {\n    var isphoneNumber =  phoneNumberValidator(id); \n    var searchBy = 'billNumber'\n    if (isphoneNumber)\n      searchBy = 'phoneNumber'\n    let res = this.http.get(`${environment.googlesheetApi}?id=${id}&selectedStore=${selectedStore}&searchBy=${searchBy}`);\n    return res;\n  }\n}\n","\nexport function phoneNumberValidator(phoneNumber: string): Boolean {\n  const valid = /^\\d+$/.test(phoneNumber)\n  return (valid && phoneNumber.length >= 10) ? true : false\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  googlesheetApi: 'http://localhost:3000/googlesheet'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}