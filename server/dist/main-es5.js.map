{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add/add.component.ts","webpack:///src/app/add/add.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/banner/banner.component.ts","webpack:///src/app/banner/banner.component.html","webpack:///src/app/get-status/get-status.component.ts","webpack:///src/app/get-status/get-status.component.html","webpack:///src/app/google-sheet.service.ts","webpack:///src/app/phoneNumber-validator.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","value","AddComponent","_formBuilder","addedItems","itemControl","shops","customerFormGroup","group","name","phoneNumber","productFormGroup","item","quantity","rate","remark","shopFormGroup","invoice","Date","getTime","shopName","date","now","items","get","push","index","Number","patchValue","onDecrement","onIncrement","onDecrementMinusTen","onInclementPlusTen","addProducts","selector","templateUrl","styleUrls","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","BannerComponent","links","activeLink","GetStatusComponent","googleSheetService","breakpointObserver","submitted","panelOpenState","contentClass","clickMessage","showResult","showSpinner","isResultNotFound","displayedColumns","customerData","createFormGroup","observe","HandsetPortrait","subscribe","result","console","log","matches","required","selectedStore","dataSource","invalid","getSheets","elements","getSheet","data","forEach","it","iconName","iconClass","ready","pending","error","state","itemRes","totalPieces","finishedPieces","damagedPieces","status","link","element","billNumber","dueDate","total","length","controls","onSubmit","GoogleSheetService","http","isphoneNumber","searchBy","res","googlesheetApi","providedIn","phoneNumberValidator","valid","test","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n  customerFormGroup: FormGroup;\n  shopFormGroup: FormGroup;\n  item: FormGroup;\n  addedItems: FormArray = new FormArray([]);\n  productFormGroup: FormGroup;\n  itemControl = new FormControl();\n  shops: string[] = ['Veloor', 'Velappaya', 'MgKavu'];\n  filteredOptions: Observable<string[]>;\n\n\n  constructor(private _formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    this.customerFormGroup = this._formBuilder.group({\n      name: [''],\n      phoneNumber: ['']\n    });\n    this.productFormGroup = this._formBuilder.group({\n      addedItems: new FormArray([\n      ])\n    });\n    this.item = this._formBuilder.group({\n      item: [''],\n      quantity: [1],\n      rate: [50],\n      remark: ['']\n    });\n    this.shopFormGroup = this._formBuilder.group({\n      invoice: [new Date().getTime()],\n      shopName: [this.shops[0]],\n      date: [Date.now()]\n    })\n  }\n\n\n  addProducts() {\n    const items = <FormArray>this.productFormGroup.get('addedItems');\n    items.push(this.item)\n    this.item = this._formBuilder.group({\n      item: [''],\n      quantity: [1],\n      rate: [50],\n      remark: ['']\n    })\n  }\n\n  onIncrement(index): void {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.quantity) + 1;\n    this.item.patchValue({\n      quantity: [value]\n    })\n\n  }\n\n  onDecrement(index): void {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.quantity) - 1;\n    this.item.patchValue({\n      quantity: [value]\n    })\n  }\n  onDecrementMinusFive(index) {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.rate) - 5;\n    this.item.patchValue({\n      rate: [value]\n    })\n  }\n  onDecrementMinusTen(index) {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.rate) - 10;\n    this.item.patchValue({\n      rate: [value]\n    })\n  }\n  onInclementPlusFive(index) {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.rate) + 5;\n    this.item.patchValue({\n      rate: [value]\n    })\n  }\n  onInclementPlusTen(index) {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    let value: number = Number(this.item.value.rate) + 10;\n    this.item.patchValue({\n      rate: [value]\n    })\n  }\n  shouldDisableDecrement(index): boolean {\n    //const items = <FormArray>this.productFormGroup.get('items');\n    if (Number(this.item.value.quantity) <= 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n} \n","<mat-vertical-stepper linear=false #stepper>\n    <mat-step [stepControl]=\"shopFormGroup\">\n        <ng-template matStepLabel>Fill out Shop Details</ng-template>\n\n        <form [formGroup]=\"shopFormGroup\">\n            <div class=\"mat-h3\">\n                <span>{{shopFormGroup.value.date | date:'mediumDate'}}</span>\n            </div>\n            <div class=\"mat-h3\">\n                Invoice: <span>{{shopFormGroup.value.invoice}}</span>\n            </div>\n            <div class=\"shop\">\n                <mat-form-field>\n                    <mat-label>Shop</mat-label>\n                    <mat-select formControlName=\"shopName\">\n                        <mat-option *ngFor=\"let shop of shops\" [value]=\"shop\">\n                            {{shop}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n\n        </form>\n        <div class=\"next\"><button mat-button matStepperNext color=\"primary\">Next</button></div>\n\n        <div class=\"back\">\n            <button mat-button matStepperPrevious color=\"warn\">Back</button>\n        </div>\n    </mat-step>\n    <mat-step [stepControl]=\"customerFormGroup\">\n        <form [formGroup]=\"customerFormGroup\">\n            <ng-template matStepLabel>Fill out Customer Details</ng-template>\n            <div class=\"customer-data\">\n                <mat-form-field>\n                    <mat-label>Name</mat-label>\n                    <input matInput placeholder=\"John Snow\" formControlName=\"name\">\n                </mat-form-field>\n                <mat-form-field>\n                    <mat-label>Phone</mat-label>\n                    <input matInput placeholder=\"919495345789\" formControlName=\"phoneNumber\">\n                </mat-form-field>\n            </div>\n            <div class=\"next\"><button mat-button matStepperNext color=\"primary\">Next</button></div>\n            <div class=\"back\">\n                <button mat-button matStepperPrevious color=\"warn\">Back</button>\n            </div>\n        </form>\n    </mat-step>\n\n    <mat-step [stepControl]=\"productFormGroup\">\n        <form [formGroup]=\"productFormGroup\" class=\"content-product\">\n            <ng-template matStepLabel>Fill out Item Details</ng-template>\n            <div class=\"item-preview\">\n                <mat-accordion>\n                    <mat-expansion-panel\n                        *ngFor=\"let product of productFormGroup.get('addedItems')['controls']; let i = index;\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                {{product.value.item}}\n                            </mat-panel-title>\n                            <mat-panel-description>\n                                Remark: {{product.value.remark}}\n                            </mat-panel-description>\n                        </mat-expansion-panel-header>\n                        <ng-template matExpansionPanelContent>\n                            <div class=\"items-details\">\n                                <mat-form-field>\n                                    <mat-label>Quantity</mat-label>\n                                    <input matInput readonly value=\"{{product.value.quantity}}\">\n                                </mat-form-field>\n                                <mat-form-field>\n                                    <mat-label>Rate</mat-label>\n                                    <input matInput readonly value=\"{{product.value.rate}}\">\n                                </mat-form-field>\n                            </div>\n                        </ng-template>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n        </form>\n        <form [formGroup]=\"item\" class=\"content-product\">\n            <div class=\"product-container\">\n                <div class=\"field-group\">\n                    <span class=\"item\">\n                        <mat-form-field ngClass=\"item\">\n                            <mat-label>Item</mat-label>\n                            <input matInput type=\"text\" placeholder=\"Shirt\" formControlName=\"item\">\n                        </mat-form-field>\n                    </span>\n                    <mat-form-field>\n                        <button mat-button mat-icon-button matPrefix aria-label=\"Remove\" color=\"red\"\n                            (click)=\"onDecrement(0)\" [disabled]=\"shouldDisableDecrement(0)\">\n                            <mat-icon>remove</mat-icon>\n                        </button>\n                        <mat-label>Quantity</mat-label>\n                        <input matInput type=\"number\" formControlName=\"quantity\">\n                        <button mat-button mat-icon-button matSuffix aria-label=\"Add\" color=\"green\"\n                            (click)=\"onIncrement(0)\">\n                            <mat-icon>add</mat-icon>\n                        </button>\n                    </mat-form-field>\n                    <mat-form-field class=\"rate\">\n                        <button mat-button mat-icon-button matPrefix aria-label=\"Remove\" color=\"red\"\n                            (click)=\"onDecrementMinusTen(0)\" [disabled]=\"shouldDisableDecrement(0)\">\n                            <mat-icon>remove</mat-icon><span class=\"incr\">10</span>\n                        </button>\n                        <mat-label>Rate</mat-label>\n                        <input matInput type=\"number\" formControlName=\"rate\">\n                        <button mat-button mat-icon-button matSuffix aria-label=\"Add\" color=\"green\"\n                            (click)=\"onInclementPlusTen(0)\">\n                            <mat-icon>add</mat-icon><span class=\"incr\">10</span>\n                        </button>\n                    </mat-form-field>\n                </div>\n                <div class=\"field-group-remark\">\n                    <mat-form-field class=\"remark\">\n                        <mat-label>Remark</mat-label>\n                        <textarea matInput type=\"text\" formControlName=\"remark\"></textarea>\n                    </mat-form-field>\n                </div>\n\n            </div>\n        </form>\n        <div class=\"addProduct\">\n            <button mat-button (click)=\"addProducts()\">\n                <mat-icon class=\"add-icon\">add_circle</mat-icon>\n            </button><br>\n        </div>\n        <div class=\"next\"><button mat-button matStepperNext color=\"primary\">Next</button></div>\n        <div class=\"back\">\n            <button mat-button matStepperPrevious color=\"warn\">Back</button>\n        </div>\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Done</ng-template>\n        <p>Click submit to save.</p>\n        <div class=\"next\">\n            <button mat-raised-button matStepperPrevious color=\"primary\">Submit</button>\n        </div>\n    </mat-step>\n</mat-vertical-stepper>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GetStatusComponent } from './get-status/get-status.component';\nimport {AddComponent} from './add/add.component'\nconst routes: Routes = [\n  { path: 'search', component: GetStatusComponent },\n  { path: 'add', component: AddComponent },\n  { path: '', redirectTo: '/search', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'shipment-status';\n}\n","<app-banner></app-banner>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GetStatusComponent } from './get-status/get-status.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BannerComponent } from './banner/banner.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {LayoutModule} from '@angular/cdk/layout';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { AddComponent } from './add/add.component';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GetStatusComponent,\n    BannerComponent,\n    AddComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatTableModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatListModule,\n    MatBadgeModule,\n    MatRadioModule,\n    MatButtonToggleModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    LayoutModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatStepperModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss']\n})\nexport class BannerComponent implements OnInit {\n  links = [{'label': 'Search', 'path':'./search'}, {'label': 'Add', 'path':'./add'}];\n  activeLink = this.links[0];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Toolbar -->\n<!-- <div class=\"toolbar\" role=\"banner\">\n  <img width=\"40\" alt=\"Angular Logo\" src=\"../../assets/laundryIcon.jpg\" />\n  <h1>The Laundry Expert</h1> -->\n  <mat-toolbar color=\"primary\">\n    <img width=\"40\" alt=\"Logo\" src=\"../../assets/laundryIcon.jpg\" />\n    <span>The Laundry Expert</span>\n  </mat-toolbar>\n    <!-- <mat-tab label=\"Search\"> <a routerLink=\"/search\" routerLinkActive=\"active\">Search</a> </mat-tab>\n    <mat-tab label=\"Add\"> <a routerLink=\"/add\" routerLinkActive=\"active\">Add</a> </mat-tab> -->\n    <!-- <nav mat-tab-nav-bar>\n      <a mat-tab-link\n         routerLink=\"./search\"\n         routerLinkActive #rla=\"routerLinkActive\"\n         active=\"true\">\n        Search\n      </a>\n      <a mat-tab-link\n         routerLink=\"./add\"\n         routerLinkActive #rla=\"routerLinkActive\"\n         active=\"true\">\n        Add\n      </a>\n    </nav> -->\n    <nav mat-tab-nav-bar>\n      <a *ngFor=\"let link of links\" mat-tab-link\n      (click)=\"activeLink = link\"\n      [active]=\"activeLink == link\"\n      [routerLink]=\"link.path\"\n      > {{ link.label }} \n      \n    </a>\n<!-- \n      [active]=\"isViewInitialized && isLinkActive(rla)\"\n        [routerLink]=\"link.path\"\n        routerLinkActive>\n        {{link.label}}\n      </a> -->\n    </nav>\n  <router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GoogleSheetService } from '../google-sheet.service';\nimport { Item, PeriodicElement } from './model';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-get-status',\n  templateUrl: './get-status.component.html',\n  providers: [GoogleSheetService],\n  styleUrls: ['./get-status.component.scss']\n})\n\n\nexport class GetStatusComponent implements OnInit {\n  customerData: FormGroup;\n  submitted = false;\n  panelOpenState = false;\n  contentClass = 'web-status-margin';\n  constructor(private googleSheetService: GoogleSheetService, breakpointObserver: BreakpointObserver) {\n    this.customerData = this.createFormGroup();\n    breakpointObserver.observe([\n      Breakpoints.HandsetPortrait\n    ]).subscribe(result => {\n      console.log(\"matched: \" + result.matches)\n      if (result.matches) {\n        this.contentClass = 'mobile-status-margin';\n      }\n    });\n  }\n  createFormGroup() {\n    return new FormGroup({\n      id: new FormControl('', [Validators.required]),\n      selectedStore: new FormControl('Veloor')\n    });\n  }\n  clickMessage = '';\n  dataSource;\n  showResult = false;\n  showSpinner = false;\n  isResultNotFound = false;\n\n  ngOnInit(): void {\n    this.dataSource = [];\n  }\n\n  onSubmit() {\n    this.dataSource = [];\n    if (this.customerData.invalid) {\n      return;\n    } else {\n      this.showSpinner = true;\n      this.isResultNotFound = false;\n      this.showResult = false;\n      this.getSheets(this.customerData.value.id, this.customerData.value.selectedStore);\n      this.submitted = true;\n    }\n  }\n\n  getSheets(phoneNumber, selectedStore): void {\n    console.log(selectedStore)\n    const elements: PeriodicElement[] = [];\n    this.googleSheetService.getSheet(phoneNumber, selectedStore)\n      .subscribe((data: any[]) => {\n        data.forEach(it => {\n          let iconName = '';\n          let iconClass = '';\n          let items = [];\n          let ready = false;\n          let pending = false;\n          let error = false;\n          let state: string;\n          for (let itemRes of it.items) {\n            let item: Item = {\n              name: itemRes.name,\n              totalPieces: itemRes.totalPieces,\n              finishedPieces: itemRes.finishedPieces,\n              damagedPieces: itemRes.damagedPieces\n            }\n            if (itemRes.status == 'Ready' || itemRes.status == 'Ready ') {\n              item.iconName = 'check_circle';\n              item.iconClass = 'done-icon';\n              state = 'ready for delivery';\n              ready = true;\n            } else if (itemRes.status == 'Pending ') {\n              item.iconName = 'warning';\n              item.iconClass = 'inprogress-icon';\n              state = 'in process';\n              pending = true\n            } else if (itemRes.status == 'Ready+return') {\n              item.iconName = 'check_circle';\n              item.iconClass = 'delivered-icon';\n              pending = true;\n              state = 'ready for delivery';\n            } else {\n              item.iconName = 'error';\n              item.iconClass = 'error-icon';\n              error = true;\n              state = 'in process';\n            }\n            items.push(item);\n          }\n\n          if (ready == true && pending !== true && error !== true) {\n            iconName = 'check_circle';\n            iconClass = 'done-icon';\n          } else if (pending == true && error !== true) {\n            iconName = 'warning';\n            iconClass = 'inprogress-icon';\n          } else {\n            iconName = 'error';\n            iconClass = 'error-icon';\n            state = 'in process';\n          }\n          const link = `https://wa.me/${it.phoneNumber}?text=*THE LAUNDRY EXPERT*\n          %0AHi ${it.name}, \n          %0AYour material is _${state}_.\n          %0A_Looking forward to working with you again soon._ Thank you for choosing us.\n          %0AThe Laundry Expert 😀`\n          let element = {\n            name: it.name, billNumber: it.billNumber, date: it.date, dueDate: it.dueDate,\n            phoneNumber: it.phoneNumber, total: it.total, link: link, iconName: iconName,\n            iconClass: iconClass, items: items\n          }\n          elements.push(element)\n        })\n        if (elements.length > 0) {\n          this.showResult = true;\n          this.submitted = false;\n        } else {\n          this.isResultNotFound = true;\n          this.submitted = false;\n        }\n        this.showSpinner = false;\n        this.dataSource = elements;\n      });\n  }\n\n  get f() { return this.customerData.controls; }\n\n  displayedColumns: string[] = ['phoneNumber', 'name', 'billNumber', 'status', 'remark'];\n}\n","<div [ngClass]=\"contentClass\">\n    <h2>Find Status </h2>\n    <form [formGroup]=\"customerData\" (ngSubmit)=\"onSubmit()\" ngClass=\"form-field-custom\">\n        <mat-button-toggle-group aria-label=\"Select a store\" formControlName=\"selectedStore\">\n            <mat-button-toggle value=\"Veloor\" [checked]=true>Veloor</mat-button-toggle>\n            <mat-button-toggle value=\"Velappaya\">Velappaya</mat-button-toggle>\n            <mat-button-toggle value=\"Mulamkunnathkavu\">MgKavu</mat-button-toggle>\n        </mat-button-toggle-group>\n        <br>\n        <mat-form-field [ngClass]=\"{ 'has-error': submitted && f.id.errors }\">\n            <mat-label>Phone number/ Bill Number</mat-label>\n            <input matInput placeholder=\"9789821252\" formControlName=\"id\" value=\"919789821252/VA1000\">\n            <div *ngIf=\"submitted && f.id.errors\" class=\"help-block\">\n                <div *ngIf=\"f.id.errors.required\">Phone no/ Bill number is required</div>\n            </div>\n\n        </mat-form-field>\n        <button mat-icon-button color=\"primary\" type=\"submit\" [disabled]=\"!customerData.valid\">\n            <mat-icon>send</mat-icon>\n        </button>\n\n\n    </form>\n    <div *ngIf=\"showSpinner; then show\"> </div>\n    <ng-template #show>\n        <div class=\"spinner-wrapper\">\n            <mat-progress-spinner mode=\"indeterminate\" diameter=30></mat-progress-spinner>\n        </div>\n\n    </ng-template>\n    <div *ngIf=\"showResult; then thenBlock else elseBlock\"> </div>\n    <ng-template #thenBlock>\n        <mat-accordion class=\"accordion-extend\">\n            <mat-expansion-panel *ngFor=\"let data of dataSource\" (opened)=\"panelOpenState = true\"\n                (closed)=\"panelOpenState = false\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <mat-icon [ngClass]=\"data.iconClass\">{{data.iconName}}</mat-icon><span\n                            ngClass=\"card-header\">{{data.billNumber}}</span>\n                    </mat-panel-title>\n                    <mat-panel-description ngClass=\"card-header-date\">\n                        {{ data.date | date:'mediumDate' }}\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                <div>Name : {{data.name}}</div>\n                <div>Phone number : {{data.phoneNumber}}</div>\n                <div>Due Date: {{data.dueDate | date:'mediumDate'}}</div>\n                <div>Total: {{data.total}} Rupees</div>\n                <div>Items :\n                    <mat-list *ngFor=\"let item of data.items\">\n                        <mat-list-item>\n                            <mat-icon [ngClass]=\"item.iconClass\">{{item.iconName}}</mat-icon>\n                            <span ngClass=\"item-details\">{{item.name}}</span>\n                            <span ngClass=\"circle-total\">{{item.totalPieces}}</span>\n                            <span ngClass=\"circle-done\">{{item.finishedPieces}}</span>\n                            <div *ngIf=\"item.damagedPieces; then thenBlock\"> </div>\n                            <ng-template #thenBlock>\n                                <span ngClass=\"circle-damaged\">{{item.damagedPieces}}</span>\n                            </ng-template>\n                        </mat-list-item>\n                        <!-- <mat-grid-list cols=\"2\" rowHeight=\"2:1\">                \n                        \n                            <mat-grid-tile ngClass=\"tile-spec\">\n                                <span matBadge=\"{{item.finishedPieces}}\" matBadgeOverlap=\"false\">Fished</span>\n                            </mat-grid-tile>\n                            <mat-grid-tile ngClass=\"tile-spec\">\n                                <span matBadge=\"{{item.damagedPieces}}\" matBadgeOverlap=\"false\">Damaged</span>\n                            </mat-grid-tile>\n                        </mat-grid-list> -->\n                        <mat-divider></mat-divider>\n                    </mat-list>\n\n                </div>\n                <mat-action-row>\n                    <a mat-raised-button [href]=\"data.link\" target=\"_blank\" color=\"primary\">Send to WhatsApp</a>\n                </mat-action-row>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </ng-template>\n    <ng-template #elseBlock>\n        <div *ngIf=\"isResultNotFound; then thenBlock\"></div>\n        <ng-template #thenBlock>No Results found</ng-template>\n    </ng-template>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from './../environments/environment';\nimport { phoneNumberValidator } from './phoneNumber-validator'\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleSheetService {\n\n  constructor(private http: HttpClient) { }\n  getSheet(id, selectedStore) {\n    var isphoneNumber =  phoneNumberValidator(id); \n    var searchBy = 'billNumber'\n    if (isphoneNumber)\n      searchBy = 'phoneNumber'\n    let res = this.http.get(`${environment.googlesheetApi}?id=${id}&selectedStore=${selectedStore}&searchBy=${searchBy}`);\n    return res;\n  }\n}\n","\nexport function phoneNumberValidator(phoneNumber: string): Boolean {\n  const valid = /^\\d+$/.test(phoneNumber)\n  return (valid && phoneNumber.length >= 10) ? true : false\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  googlesheetApi: 'http://localhost:3000/googlesheet'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}